#!/bin/bash
set -e

### Using input variables from Terraform
ansible_playbook=${ansible_playbook_file}
ansible_log_path=${ansible_log_path}
ansible_inventory=${ansible_inventory}
ansible_private_key_file=${ansible_private_key_file}

# Get playbook name for log
ansible_playbook_name=$(basename $${ansible_playbook})

# Create ansible.cfg file
cat <<EOF > ansible.cfg
[defaults]
host_key_checking = False
# SSH connect timeout per attempt
timeout = 60             

[ssh_connection]
ssh_args = -o ForwardAgent=yes -o ControlPersist=30m -o ServerAliveInterval=45 -o ServerAliveCountMax=10
control_path = ~/.ansible/cp/%%h-%%p-%%r
pipelining = True
EOF

# Export environment variables
export ANSIBLE_CONFIG=$(pwd)/ansible.cfg
export ANSIBLE_LOG_PATH=$${ansible_log_path}/$${ansible_playbook_name}.$(date "+%Y.%m.%d-%H.%M.%S").log
export ANSIBLE_PRIVATE_KEY_FILE=$${ansible_private_key_file}

echo "============================================================"
echo "Running Ansible playbook: $${ansible_playbook}"
echo "Inventory: $${ansible_inventory}"
echo "Log file: $${ANSIBLE_LOG_PATH}"
echo "============================================================"

# Execute playbook
unbuffer ansible-playbook -i $${ansible_inventory} $${ansible_playbook}
rc=$?

# Cleanup and exit
rm -f $${ansible_private_key_file}

if [ $rc -ne 0 ]; then
    echo "Playbook execution failed with exit code $rc"
    exit 1
else
    echo "Playbook command successful"
fi
